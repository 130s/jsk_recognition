<launch>
  <machine name="localhost" address="localhost" env-loader="$(env ROS_ENV_LOADER)" />
  <arg name="cloud_machine" default="localhost"/>
  <arg name="image" default="/openni/rgb"/>
  <arg name="image_type" default="image_rect_color"/>
  <arg name="camera_info" default="$(arg image)/camera_info"/>
  <arg name="points" default="/openni/depth_registered/points"/>
  <arg name="USE_VIEW" default="false" />
  <arg name="LAUNCH_OPENNI" default="false" />
  <arg name="USE_DEPTH_CREATER" default="true" />

  <arg unless="$(arg USE_DEPTH_CREATER)"
       name="inpoints" value="$(arg points)" />
  <arg if    ="$(arg USE_DEPTH_CREATER)"
       name="inpoints" value="/screenpoint_manager/points" />

  <include if="$(arg LAUNCH_OPENNI)"
           file="$(find openni_launch)/launch/openni.launch" >
    <arg name="camera" value="openni" />
  </include>

  <node name="screenpoint_manager" pkg="nodelet"
        type="nodelet" args="manager" output="screen"
        machine="$(arg cloud_machine)" respawn="true"/>

  <node if="$(arg USE_DEPTH_CREATER)"
        name="depth_image_creator_nodelet" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/DepthImageCreator screenpoint_manager"
        output="screen" clear_params="true" respawn="true"
        machine="$(arg cloud_machine)">
    <remap from="~info" to="$(arg camera_info)" />
    <remap from="~input" to="$(arg points)" />
    <remap from="~output_cloud" to="/screenpoint_manager/points" />
    <rosparam>
    scale_depth: 5.0
    max_queue_size: 10
    use_fixed_transform: false
    use_service: false
    use_asynchronous: false
    use_approximate: true
    </rosparam>
  </node>

  <group unless="$(arg USE_VIEW)" >
  <node name="pointcloud_screenpoint_nodelet" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/PointcloudScreenpoint screenpoint_manager"
        output="screen" clear_params="true" respawn="true"
        machine="$(arg cloud_machine)">
    <remap from="~points" to="$(arg inpoints)" />
    <rosparam>
      queue_size: 1
      crop_size: 10
      search_size: 16
      use_rect: false
      use_point: false
      publish_points: false
      publish_point: true
    </rosparam>
  </node>
  </group>

  <group if="$(arg USE_VIEW)" >
  <node name="screenpoint_view" ns="$(arg image)"
        pkg="image_view2" type="image_view2" output="screen" >
    <remap from="image" to="$(arg image_type)" />
    <param name="autosize" value="true" />
  </node>
  <node name="pointcloud_screenpoint_nodelet" pkg="nodelet" type="nodelet"
        args="load jsk_pcl/PointcloudScreenpoint screenpoint_manager"
        output="screen" clear_params="true" respawn="true"
        machine="$(arg cloud_machine)" >
    <remap from="~points" to="$(arg inpoints)" />
    <remap from="~point" to="$(arg image)/$(arg image_type)/screenpoint" />
    <remap from="~rect" to="$(arg image)/$(arg image_type)/screenrectangle" />
    <rosparam>
      queue_size: 10
      crop_size: 10
      search_size: 16
      use_rect: false
      use_point: true
      publish_points: true
      publish_point: true
    </rosparam>
  </node>
  </group>

  <sphinxdoc><![CDATA[

  Please see pointcloud_screenpoint_sample.launch for documentation.

  ]]></sphinxdoc>

</launch>